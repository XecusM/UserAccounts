"""
Django settings for useraccounts project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import django_heroku
from . import useraccounts_settings as my_settings

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = my_settings.BASE_DIR
TEMPLATES_DIR = os.path.join(BASE_DIR,'templates')
SATAIC_DIR = os.path.join(BASE_DIR,'static')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = my_settings.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = my_settings.DEBUG

ALLOWED_HOSTS = my_settings.ALLOWED_HOSTS


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'nocaptcha_recaptcha',
    'bootstrap4',
    'userprofile.apps.UserprofileConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'useraccounts.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'useraccounts.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = my_settings.DATABASES


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'

STATIC_URL = '/static/'
STATICFILES_DIRS = [SATAIC_DIR]
STATIC_ROOT = my_settings.STATIC_ROOT

# Edit user accounts database
AUTH_USER_MODEL = 'userprofile.User'
LOGIN_URL = 'userprofile:login'
LOGIN_REDIRECT_URL = 'index'
LOGOUT_REDIRECT_URL = 'index'

# email sever settings
EMAIL_BACKEND = my_settings.EMAIL_BACKEND
EMAIL_HOST = my_settings.EMAIL_HOST
EMAIL_HOST_USER = my_settings.EMAIL_HOST_USER
EMAIL_PORT = my_settings.EMAIL_PORT
EMAIL_HOST_PASSWORD = my_settings.EMAIL_HOST_PASSWORD
EMAIL_USE_TLS = my_settings.EMAIL_USE_TLS
EMAIL_USE_SSL = my_settings.EMAIL_USE_SSL

# Google reCaptcha settings
GOOGLE_RECAPTCHA_SECRET_KEY = my_settings.GOOGLE_RECAPTCHA_SECRET_KEY
NORECAPTCHA_SITE_KEY = my_settings.GOOGLE_RECAPTCHA_SITE_KEY
NORECAPTCHA_SECRET_KEY = my_settings.GOOGLE_RECAPTCHA_SECRET_KEY

# activate django-heroku application
django_heroku.settings(locals())
